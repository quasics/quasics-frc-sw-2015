// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "FlyWheelAutonomous.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

FlyWheelAutonomous::FlyWheelAutonomous(bool isIntake, double seconds): Command() {
    m_isIntake = isIntake;
    m_seconds = seconds;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooter.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	mSeconds = int(m_seconds*50 +.5); //Transfer run time into program cycle
	timer = 0; //Set cycle counter to 0
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void FlyWheelAutonomous::Initialize() {
	Robot::shooter->SetWheels(!m_isIntake); //Set the fly wheels to input/output
}

// Called repeatedly when this Command is scheduled to run
void FlyWheelAutonomous::Execute() {
	timer++;//increment timer
}

// Make this return true when this Command no longer needs to run execute()
bool FlyWheelAutonomous::IsFinished() {
    return timer >= mSeconds;//Stop when at or above the target cycle count
}

// Called once after isFinished returns true
void FlyWheelAutonomous::End() {
	Robot::shooter->StopWheels(); //Stop wheels when done
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void FlyWheelAutonomous::Interrupted() {
	Robot::shooter->StopWheels(); //Stop wheels when interrupted
}
