* Add use of SlewRateLimiter to the example, in order to smooth out the rate of change
  on the joysticks.
  Refs:
     * https://www.chiefdelphi.com/t/basics-to-smooth-robot-drive/409557
     * https://docs.wpilib.org/en/stable/docs/software/advanced-controls/filters/slew-rate-limiter.html

  Code changes:
    // Add to RobotContainer.h:
    // Slew rate limiters to make joystick inputs more gentle; 1/3 sec from 0
    // to 1.
    frc::SlewRateLimiter<units::scalar> m_leftSpeedLimiter{3 / 1_s};
    frc::SlewRateLimiter<units::scalar> m_rightSpeedLimiter{3 / 1_s};

    // Adjusting calls to TankDrive:
    // Slew-rate limits the forward/backward input, limiting forward/backward acceleration
    drivetrain.TankDrive(m_leftSpeedLimiter.Calculate(leftSpeed),
                         m_rightSpeedLimiter.Calculate(rightSpeed));

   // Note: similar changes would be needed for ArcadeDrive.

