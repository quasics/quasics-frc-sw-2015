// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#ifndef RAMP_H
#define RAMP_H

#include <WPILib.h>

/**
 *
 *
 * @author ExampleAuthor
 */
class Ramp: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<frc::Servo> rightLinearActuatorServo;
	std::shared_ptr<frc::Servo> leftLinearActuatorServo;
	std::shared_ptr<frc::DoubleSolenoid> leftRamp1;
	std::shared_ptr<frc::DoubleSolenoid> leftRamp2;
	std::shared_ptr<frc::DoubleSolenoid> rightRamp1;
	std::shared_ptr<frc::DoubleSolenoid> rightRamp2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
	Ramp();
	void ExtendLeftRamp();
	void ExtendRightRamp();
	void Shutdown();
	void InitDefaultCommand() override;
	void Periodic() override;
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
};

#endif
