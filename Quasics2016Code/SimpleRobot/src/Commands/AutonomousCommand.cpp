// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "AutonomousCommand.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

AutonomousCommand::AutonomousCommand() :
		Command() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	isFinished = false;
	fun = stop;
	timer = 0;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void AutonomousCommand::Initialize() {
	isFinished = false;
	fun = stop;
	timer = 0;
	Robot::driveSystem->ResetYaw();
}

// Called repeatedly when this Command is scheduled to run
void AutonomousCommand::Execute() {
	if (timer <= 25) {
		fun = forward;
	} else if ( Robot::driveSystem->GetContinuousYaw()>= -60) {
		fun = turnright;
	} else if (timer <= 25) {
		fun = forward;
	} else if (Robot::driveSystem->GetContinuousYaw() >= -60) {
		fun = turnright;
	} else if (timer <= 25) {
		fun = forward;
	} else if (Robot::driveSystem->GetContinuousYaw() >= -60) {
		fun = turnright;
	} else {
		fun = stop;
		isFinished = true;
	}

	switch (fun) {
	case forward:
		Robot::driveSystem->MoveLeft(40);
		Robot::driveSystem->MoveRight(40);
		break;
	case turnright:
		Robot::driveSystem->MoveLeft(40);
		Robot::driveSystem->MoveRight(-40);
		timer = 0;
		break;
	default:
		Robot::driveSystem->StopEverything();

		++timer;

	}
}

// Make this return true when this Command no longer needs to run execute()
bool AutonomousCommand::IsFinished() {
	return isFinished;

}

// Called once after isFinished returns true
void AutonomousCommand::End() {
	Robot::driveSystem->StopEverything();

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutonomousCommand::Interrupted() {
	Robot::driveSystem->StopEverything();

}
