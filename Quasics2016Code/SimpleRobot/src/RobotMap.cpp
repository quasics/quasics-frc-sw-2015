// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::driveSystemLeftFront;
std::shared_ptr<SpeedController> RobotMap::driveSystemLeftRear;
std::shared_ptr<SpeedController> RobotMap::driveSystemRightFront;
std::shared_ptr<SpeedController> RobotMap::driveSystemRightRear;
std::shared_ptr<RobotDrive> RobotMap::driveSystemRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveSystemLeftFront.reset(new Talon(0));
    lw->AddActuator("DriveSystem", "LeftFront", (Talon&) driveSystemLeftFront);
    
    driveSystemLeftRear.reset(new Talon(1));
    lw->AddActuator("DriveSystem", "LeftRear", (Talon&) driveSystemLeftRear);
    
    driveSystemRightFront.reset(new Talon(2));
    lw->AddActuator("DriveSystem", "RightFront", (Talon&) driveSystemRightFront);
    
    driveSystemRightRear.reset(new Talon(3));
    lw->AddActuator("DriveSystem", "RightRear", (Talon&) driveSystemRightRear);
    
    driveSystemRobotDrive41.reset(new RobotDrive(driveSystemLeftFront, driveSystemLeftRear,
              driveSystemRightFront, driveSystemRightRear));
    
    driveSystemRobotDrive41->SetSafetyEnabled(true);
        driveSystemRobotDrive41->SetExpiration(0.1);
        driveSystemRobotDrive41->SetSensitivity(0.5);
        driveSystemRobotDrive41->SetMaxOutput(1.0);

        driveSystemRobotDrive41->SetInvertedMotor(RobotDrive::kFrontRightMotor, true);
        driveSystemRobotDrive41->SetInvertedMotor(RobotDrive::kRearRightMotor, true);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
