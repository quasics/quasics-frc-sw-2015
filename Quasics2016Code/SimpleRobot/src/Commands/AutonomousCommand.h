// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef AUTONOMOUS_COMMAND_H
#define AUTONOMOUS_COMMAND_H

#include "CloneableCommand.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class AutonomousCommand: public CloneableCommand {
public:
	enum FieldPosition {
		ePositionNull,
		ePosition1,
		ePosition2,
		ePosition3,
		ePosition4,
		ePosition5
	};
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

	AutonomousCommand(int TargetPosition);
	AutonomousCommand(FieldPosition TargetPosition);

	virtual void Initialize();
	virtual void Execute();
	virtual bool IsFinished();
	virtual void End();
	virtual void Interrupted();

	virtual std::unique_ptr<Command> clone() const {
		return std::unique_ptr<Command>(new AutonomousCommand(m_TargetPosition));
	}

private:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLES

	FieldPosition m_TargetPosition;
    bool isEndstep;
    int autoStage;
    int endstepTimer;

    bool Auto1 ();
    bool Auto2 ();
    bool Auto3 ();
    bool Auto4 ();
    bool Auto5 ();

    void StopOperations();
};

#endif
