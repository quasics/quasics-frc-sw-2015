// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "StubCommand1.h"
using namespace std;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

StubCommand1::StubCommand1() :
		Command() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveSystem.get());
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	test = 0;
	cupidShuffle = 0;
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void StubCommand1::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void StubCommand1::Execute() {
	if (cupidShuffle <= 25) {
		Robot::driveSystem->MoveLeft(-50);
		Robot::driveSystem->MoveRight(-50);
	} else if (cupidShuffle <= 50) {
		Robot::driveSystem->MoveLeft(0);
		Robot::driveSystem->MoveRight(0);
	} else if (cupidShuffle <= 75) {
		Robot::driveSystem->MoveLeft(50);
		Robot::driveSystem->MoveRight(50);
	} else if (cupidShuffle <= 100) {
		Robot::driveSystem->MoveLeft(0);
		Robot::driveSystem->MoveRight(0);
	} else if (cupidShuffle <= 125) {
		Robot::driveSystem->MoveLeft(-50);
		Robot::driveSystem->MoveRight(50);
	} else if (cupidShuffle <= 150) {
		Robot::driveSystem->MoveLeft(0);
		Robot::driveSystem->MoveRight(0);
	} else {
		cupidShuffle = 0;
		test++;
	}

	cupidShuffle++;
}

// Make this return true when this Command no longer needs to run execute()
bool StubCommand1::IsFinished() {
	return test >= 5;
}

// Called once after isFinished returns true
void StubCommand1::End() {
	Robot::driveSystem->StopEverything();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void StubCommand1::Interrupted() {
	Robot::driveSystem->StopEverything();
}
