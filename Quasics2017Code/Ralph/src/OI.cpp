// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

#include <SmartDashboard/SmartDashboard.h>

#include "Commands/MoveInSquare.h"
#include "Commands/Arman.h"
#include "Commands/MoveForTime.h"
#include "Commands/PointTurnForAngle.h"
#include "Commands/GearTeleop.h"
#include "Commands/IntakeAuto.h"
#include "Commands/MoveForDistance.h"
#include "Commands/ActuatorAuto.h"
#include "Commands/outputAuto.h"
#include "RobotVariables.h"
#include "Commands/tankDrive.h"
#include "Commands/AuxiliaryCommands.h"

OI::OI() {
    // Process operator interface input here.
    auxStick.reset(new Joystick(AuxStickPort));
    driveStick.reset(new Joystick(DriverStickPort));
    
    //Smart Dashboard Buttons
    SmartDashboard::PutData("Servo", new GearTeleop());
    SmartDashboard::PutData("IntakeAuto", new IntakeAuto(1.7));
    SmartDashboard::PutData("Linear Actuator Out", new ActuatorAuto (true));
    SmartDashboard::PutData("Tank Drive", new TankDrive());
    SmartDashboard::PutData("Linear Actuator in", new ActuatorAuto (false));
    SmartDashboard::PutData("Auxiliary Commands", new AuxiliaryCommands());
}

std::shared_ptr<Joystick> OI::getDriveStick() {
   return driveStick;
}

std::shared_ptr<Joystick> OI::getAuxStick() {
   return auxStick;
}
