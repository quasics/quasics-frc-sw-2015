// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "SerialPortTest.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

SerialPortTest::SerialPortTest(std::string text): Command() {
    m_text = text;
    curPos = 0;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void SerialPortTest::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void SerialPortTest::Execute() {
	if (curPos < m_text.length()) {
		const std::string toWrite(m_text.c_str() + curPos);
		const uint32_t bytesWritten = Robot::serialPort->Write(toWrite, toWrite.length());
		curPos += bytesWritten;
		std::cout << "Wrote " << curPos << " bytes of '" << toWrite << "'" << std::endl;
	}
}

// Make this return true when this Command no longer needs to run execute()
bool SerialPortTest::IsFinished() {
    return curPos >= m_text.length();
}

// Called once after isFinished returns true
void SerialPortTest::End() {
	curPos = 0;
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void SerialPortTest::Interrupted() {
	curPos = 0;
}
