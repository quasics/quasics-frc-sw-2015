// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef SHOOTER_H
#define SHOOTER_H
#include "frc/commands/Subsystem.h"
#include "frc/WPILib.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Shooter: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<frc::SpeedController> frontShooter;
	std::shared_ptr<frc::SpeedController> backShooter;
	std::shared_ptr<frc::SpeedControllerGroup> shooterMotors;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
	Shooter();
	void InitDefaultCommand() override;
	void Periodic() override;
	void SetShooterMotors(double speed);

	class TestAccess {
		friend class Shooter;
		private:
		  Shooter &shooter;
		  TestAccess(Shooter &shooter) : shooter(shooter) {}
		public:
		  frc::Subsystem &getSubsystem() { return shooter; }
		  frc::SpeedController &getFrontMotor() { return *shooter.frontShooter; }
		  frc::SpeedController &getBackMotor() { return *shooter.backShooter; }
	};
	TestAccess getTestAccess() { return TestAccess(*this); }
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS


};

#endif
