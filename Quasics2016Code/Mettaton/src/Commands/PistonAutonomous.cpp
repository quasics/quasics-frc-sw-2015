// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "PistonAutonomous.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

PistonAutonomous::PistonAutonomous(double extensionSeconds): Command() {
    m_extensionSeconds = extensionSeconds;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooter.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	stopTime = int(m_extensionSeconds * 50 + .5); //convert seconds to cycles
	timer = 0; //set cycle counter to 0
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void PistonAutonomous::Initialize() {
	Robot::shooter->SetPiston(true); //set piston extension time
}

// Called repeatedly when this Command is scheduled to run
void PistonAutonomous::Execute() {
	timer++; //increment the cycle counter
}

// Make this return true when this Command no longer needs to run execute()
bool PistonAutonomous::IsFinished() {
    return timer >= stopTime; //return true when cycle counter meets or exceeds the target count
}

// Called once after isFinished returns true
void PistonAutonomous::End() {
	Robot::shooter->StopPiston(); //when finished, retract piston
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void PistonAutonomous::Interrupted() {
	Robot::shooter->StopPiston(); //when interrupted, retract piston
}
