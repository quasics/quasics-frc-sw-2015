// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/Dashboard.h"
#include "Commands/Lights.h"
#include "Commands/MoveArm.h"
#include "Commands/MoveArmTime.h"
#include "Commands/MoveDistance.h"
#include "Commands/MoveTime.h"
#include "Commands/MoveWheels.h"
#include "Commands/Piston.h"
#include "Commands/PointTurn.h"
#include "Commands/PointTurnTime.h"
#include "Commands/StopArm.h"
#include "Commands/StopDriveTrain.h"
#include "Commands/StopShooter.h"
#include "Commands/SwingTurn.h"
#include "Commands/SwingTurnTime.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    auxStick.reset(new Joystick(1));
    
    pilotStick.reset(new Joystick(0));
    

    // SmartDashboard Buttons
    SmartDashboard::PutData("Dashboard", new Dashboard());
    SmartDashboard::PutData("Lights", new Lights());
    SmartDashboard::PutData("Piston", new Piston());
    SmartDashboard::PutData("MoveWheels", new MoveWheels());
    SmartDashboard::PutData("MoveArmTime", new MoveArmTime());
    SmartDashboard::PutData("MoveArm", new MoveArm());
    SmartDashboard::PutData("StopShooter", new StopShooter());
    SmartDashboard::PutData("StopArm", new StopArm());
    SmartDashboard::PutData("StopDriveTrain", new StopDriveTrain());
    SmartDashboard::PutData("SwingTurnTime", new SwingTurnTime());
    SmartDashboard::PutData("SwingTurn", new SwingTurn());
    SmartDashboard::PutData("PointTurnTime", new PointTurnTime());
    SmartDashboard::PutData("PointTurn", new PointTurn());
    SmartDashboard::PutData("MoveTime", new MoveTime());
    SmartDashboard::PutData("MoveDistance", new MoveDistance());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getPilotStick() {
   return pilotStick;
}

std::shared_ptr<Joystick> OI::getAuxStick() {
   return auxStick;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
