// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "TurnForTime.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

TurnForTime::TurnForTime(double seconds, double power): Command() {
    m_seconds = seconds;
    m_power = power;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveBase.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	stopTime = int(m_seconds * 50 + .5);
	timer = 0;
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void TurnForTime::Initialize() {
	Robot::driveBase->SetLeftPower(-m_power);
	Robot::driveBase->SetRightPower(m_power);
}

// Called repeatedly when this Command is scheduled to run
void TurnForTime::Execute() {
	timer++;
}

// Make this return true when this Command no longer needs to run execute()
bool TurnForTime::IsFinished() {
    return timer >= stopTime;
}

// Called once after isFinished returns true
void TurnForTime::End() {
	Robot::driveBase->SetLeftPower();
	Robot::driveBase->SetRightPower();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void TurnForTime::Interrupted() {
	Robot::driveBase->SetLeftPower();
	Robot::driveBase->SetRightPower();
}
