// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef ROBOTMAP_H
#define ROBOTMAP_H

#include <WPILib.h>
#include "ConditionalFlags.h"


/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
class RobotMap {
public:
	static std::shared_ptr<SpeedController> driveBaseLeftFrontMotor;
	static std::shared_ptr<SpeedController> driveBaseLeftRearMotor;
	static std::shared_ptr<SpeedController> driveBaseRightFrontMotor;
	static std::shared_ptr<SpeedController> driveBaseRightRearMotor;

	// Note that I'm assuming that we have a single controller with two
	// sticks that are being used for driving control.  If we needed to
	// work with two traditional joysticks, that would be doable as well.
	static std::shared_ptr<Joystick>        driverStick;

	static std::shared_ptr<Joystick>        auxiliaryStick;

#ifdef USE_FRC_DRIVE_CODE
	static std::shared_ptr<RobotDrive> driveBaseRobotDrive21;
#endif	// USE_FRC_DRIVE_CODE

	static void init();
};
#endif
