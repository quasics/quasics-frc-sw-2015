// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#ifndef _ROBOT_H
#define _ROBOT_H

#include <Commands/Command.h>
#include <LiveWindow/LiveWindow.h>
#include <WPILib.h>

#include "OI.h"
#include "RobotMap.h"
#include "Subsystems/DriveTrain.h"
#include "Subsystems/Navigation.h"
#include "Subsystems/Intake.h"
#include "Subsystems/Gear.h"
#include "Subsystems/Outtake.h"
#include "Subsystems/FuelExhaustGate.h"
#include "Subsystems/Climber.h"


//Use Auto-Trim Code for Tank Drive?
//#define USE_TANK_DRIVE_TRIM_

// CODE_REVIEW(mjh): Document what this class actually does.
class Robot: public IterativeRobot {
// CODE_REVIEW(mjh): Consider trying to make these private (to the extent feasible).
public:
	std::unique_ptr<Command> autonomousCommand;
	static std::unique_ptr<OI> oi;
	std::unique_ptr<Command> autoCommand;
	LiveWindow * const lw = LiveWindow::GetInstance();
	static std::shared_ptr<DriveTrain> driveTrain;
	static std::shared_ptr<Navigation> gyro;
	static std::shared_ptr<Intake> intake;
	static std::shared_ptr<Gear> gear;
    static std::shared_ptr<Outtake> outtake;
    static std::shared_ptr<FuelExhaustGate> fuelExhaustGate;
    static std::shared_ptr<Climber> climber;

public:
	void RobotInit() override;
	void DisabledInit() override;
	void DisabledPeriodic() override;
	void AutonomousInit() override;
	void AutonomousPeriodic() override;
	void TeleopInit() override;
	void TeleopPeriodic() override;
	void TestPeriodic() override;
};
#endif
