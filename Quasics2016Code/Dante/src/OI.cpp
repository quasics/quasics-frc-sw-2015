// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommandGroup.h"
#include "Commands/DashboardUpdater.h"
#include "Commands/ExtraCommand.h"
#include "Commands/LightingControlGreen.h"
#include "Commands/LightingControlTeams.h"
#include "Commands/MoveArmAngle.h"
#include "Commands/MoveArmTime.h"
#include "Commands/MoveDistance.h"
#include "Commands/MoveTime.h"
#include "Commands/OneManArm.h"
#include "Commands/OneManTeleop.h"
#include "Commands/PointTurnAngle.h"
#include "Commands/PointTurnTime.h"
#include "Commands/SetIntake.h"
#include "Commands/SetPiston.h"
#include "Commands/StopArm.h"
#include "Commands/StopDriveTrain.h"
#include "Commands/StopRobot.h"
#include "Commands/StopShooter.h"
#include "Commands/SwingTurnAngle.h"
#include "Commands/SwingTurnTime.h"
#include "Commands/TankDrive.h"
#include "Commands/TwoManArm.h"
#include "Commands/TwoManTeleop.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    auxStick.reset(new Joystick(1));
    
    pilotStick.reset(new Joystick(0));
    

    // SmartDashboard Buttons
    SmartDashboard::PutData("ExtraCommand", new ExtraCommand());
    SmartDashboard::PutData("StopRobot", new StopRobot());
    SmartDashboard::PutData("OneManTeleop", new OneManTeleop());
    SmartDashboard::PutData("TwoManTeleop", new TwoManTeleop());
    SmartDashboard::PutData("AutonomousCommandGroup", new AutonomousCommandGroup());
    SmartDashboard::PutData("LightingControlTeams: Blue", new LightingControlTeams(false));
    SmartDashboard::PutData("LightingControlTeams: Red", new LightingControlTeams(true));
    SmartDashboard::PutData("LightingControlGreen", new LightingControlGreen());
    SmartDashboard::PutData("StopShooter", new StopShooter());
    SmartDashboard::PutData("StopArm", new StopArm());
    SmartDashboard::PutData("TwoManArm", new TwoManArm());
    SmartDashboard::PutData("OneManArm", new OneManArm());
    SmartDashboard::PutData("StopDriveTrain", new StopDriveTrain());
    SmartDashboard::PutData("TankDrive", new TankDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getPilotStick() {
   return pilotStick;
}

std::shared_ptr<Joystick> OI::getAuxStick() {
   return auxStick;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
