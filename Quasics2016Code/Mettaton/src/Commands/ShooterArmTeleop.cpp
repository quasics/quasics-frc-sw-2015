// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "ShooterArmTeleop.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

ShooterArmTeleop::ShooterArmTeleop() :
		Command() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooterArm.get());
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void ShooterArmTeleop::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void ShooterArmTeleop::Execute() {
	if (fabs(Robot::oi->getShooterStick()->GetRawAxis(1)) > .1) //when shooter stick axis is out of the dead band...
		Robot::shooterArm->DirectArmControll(
				-Robot::oi->getShooterStick()->GetRawAxis(1)); //Set the arm to the value of the shooter stick axis
	else
		Robot::shooterArm->StopArm(); //Else: Stop arm
}

// Make this return true when this Command no longer needs to run execute()
bool ShooterArmTeleop::IsFinished() {
	return false;
}

// Called once after isFinished returns true
void ShooterArmTeleop::End() {
	Robot::shooterArm->StopArm(); //when finished, stop arm
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ShooterArmTeleop::Interrupted() {
	Robot::shooterArm->StopArm(); //when interrupted, stop arm
}
