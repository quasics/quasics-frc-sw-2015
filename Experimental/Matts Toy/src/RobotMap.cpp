// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::driveBaseLeftMotor;
std::shared_ptr<SpeedController> RobotMap::driveBaseRightMotor;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

#ifdef USE_FRC_DRIVE_CODE
std::shared_ptr<RobotDrive> RobotMap::driveBaseRobotDrive21;
#endif	// USE_FRC_DRIVE_CODE

const int LEFT_MOTOR_CHANNEL = 0;
const int RIGHT_MOTOR_CHANNEL = 1;

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveBaseLeftMotor.reset(new Talon(LEFT_MOTOR_CHANNEL));
    lw->AddActuator("Drive Base", "Left Motor", std::static_pointer_cast<Talon>(driveBaseLeftMotor));
    
    driveBaseRightMotor.reset(new Talon(RIGHT_MOTOR_CHANNEL));
    lw->AddActuator("Drive Base", "Right Motor", std::static_pointer_cast<Talon>(driveBaseRightMotor));
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

#ifdef USE_FRC_DRIVE_CODE
    driveBaseRobotDrive21.reset(new RobotDrive(driveBaseLeftMotor, driveBaseRightMotor));
    
    driveBaseRobotDrive21->SetSafetyEnabled(true);
        driveBaseRobotDrive21->SetExpiration(0.1);
        driveBaseRobotDrive21->SetSensitivity(0.5);
        driveBaseRobotDrive21->SetMaxOutput(1.0);
#endif
}
